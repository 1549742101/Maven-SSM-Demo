<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!-- 自动扫描  @Controller-->
    <context:component-scan base-package="top.glkj.controller"/>
    <context:component-scan base-package="top.glkj.common.**"/>
    <context:component-scan base-package="top.glkj.service.**"/>

    <!-- 扫描配置文件-->
    <context:property-placeholder location="classpath:*.properties" file-encoding="UTF-8"  ignore-unresolvable="true" ignore-resource-not-found="true"/>

    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"></constructor-arg>
                <property name="supportedMediaTypes" value = "text/html;charset=UTF-8" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 登录拦截-->

    <mvc:default-servlet-handler/>

    <!-- <mvc:interceptors>
         <mvc:interceptor>
             &lt;!&ndash; 拦截所有mvc控制器 &ndash;&gt;
             <mvc:mapping path="/**"/>
             &lt;!&ndash; mvc:exclude-mapping是另外一种拦截，它可以在你后来的测试中对某个页面进行不拦截，这样就不用在
                 LoginInterceptor的preHandler方法里面获取不拦截的请求uri地址了(优选) &ndash;&gt;
             <mvc:exclude-mapping path="/login" />
             <mvc:exclude-mapping path="/loginPage" />
             <bean class="com.common.interceptor.LoginInterceptor"/>
         </mvc:interceptor>
     </mvc:interceptors>-->

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
                <bean
                        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>application/json;charset=UTF-8</value>
                            <value>text/json;charset=UTF-8</value>
                            <value>text/html;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
                <bean
                        class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/plain;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>

            </list>
        </property>
    </bean>

    <!-- 定义跳转的文件的前后缀 ，视图模式配置 -->

    <!--<mvc:view-controller path="/template/register/" view-name="reg"/>
    <mvc:annotation-driven/>-->
    <!--访问html-->
    <!--    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
    <!--        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>-->
    <!--        <property name="order" value="10"/>-->
    <!--        <property name="prefix" value="/template/"/>-->
    <!--        <property name="suffix" value=".html"/>-->
    <!--    </bean>-->
    <!-- 模板解析器 -->
    <bean id="templateResolver" class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
        <!-- 模板文件的路径前缀 -->
        <property name="prefix" value="/template/" />
        <!-- 模板文件的路径后缀 -->
        <property name="suffix" value=".html" />
        <property name="templateMode" value="HTML" />
        <!-- 配置是否缓存 -->
        <!-- 默认情况下, 模板缓存为true。如果您想要设置为false -->
        <property name="cacheable" value="false" />
        <!-- 默认编码格式 -->
        <property name="characterEncoding" value="UTF-8"/>
    </bean>
    <!-- 模板引擎 -->
    <bean id="templateEngine" class="org.thymeleaf.spring5.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver" />
        <property name="enableSpringELCompiler" value="true" />
    </bean>
    <!-- 视图解析器 -->
    <bean class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine" />
        <property name="characterEncoding" value="UTF-8"/>
    </bean>

    <!-- 文件上传配置 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="UTF-8"/>
        <!-- 上传文件大小限制为31M，31*1024*1024 -->
        <property name="maxUploadSize" value="32505856"/>
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="409600"/>
    </bean>

    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <!--注入hibernate的验证器-->
        <property name="providerClass"  value="org.hibernate.validator.HibernateValidator"/>
    </bean>
    <bean id="loadReSource" class="top.glkj.common.runner.ApplicationStartupRunner" init-method="run"/>


    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <!-- 配置 SessionLocalResolver -->
    <bean id="localeResolver"
          class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
    </bean>
    <!-- 配置 LocaleChanceInterceptor -->
    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
    </mvc:interceptors>
</beans>